parameters:
  - name: deploymentProfile
    type: object
  - name: jobName
    type: string
    default: Deploy
  - name: displayName
    type: string
    default: Deploy API Proxy
  - name: artifactAlias
    type: string
  - name: artifactName
    type: string
  - name: environment
    type: string
  - name: dependsOn
    type: object
    default: []
  - name: mandatoryTasks
    type: stepList
    default: []

jobs:
  - deployment: ${{ parameters.jobName }}
    displayName: ${{ parameters.displayName }}
    environment: ${{ parameters.environment }}
    dependsOn:
      - ${{ each dependency in parameters.dependsOn }}:
          - ${{ dependency }}
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ parameters.mandatoryTasks }}

            - download: ${{ parameters.artifactAlias }}
              artifact: ${{ parameters.artifactName }}
              displayName: Download ${{ parameters.artifactName }}

            - template: ../../../steps/export-scripts-path.yaml

            - task: CopyFiles@2
              displayName: Copy Artifacts to Build Sources Directory
              inputs:
                SourceFolder: $(Pipeline.Workspace)/${{ parameters.artifactAlias }}/${{ parameters.artifactName }}
                Contents: "**"
                TargetFolder: $(Build.SourcesDirectory)

            - task: Bash@3
              displayName: Install Software
              inputs:
                filePath: $(Framework.Config.PathToScripts)/oas2apigee/install-software.sh

            - task: Bash@3
              displayName: Generate SA Key File
              inputs:
                filePath: $(Framework.Config.PathToScripts)/sa-key-manager.sh
                arguments: generate
              env:
                GCP_SA: $(gcpServiceAccount)

            - task: Bash@3
              displayName: Create Property Set Resource
              inputs:
                filePath: $(Framework.Config.PathToScripts)/oas2apigee/property-sets-manager.sh
              env:
                SA_PATH: ./sa.json

            - task: Bash@3
              displayName: Deploy API Proxy
              inputs:
                filePath: $(Framework.Config.PathToScripts)/oas2apigee/deploy-proxy.sh
              env:
                SA_PATH: ./sa.json

            - task: Bash@3
              displayName: Delete SA Key File
              condition: always()
              inputs:
                filePath: $(Framework.Config.PathToScripts)/sa-key-manager.sh
                arguments: delete

  - template: ../../../jobs/functional-testing.yaml
    parameters:
      deploymentProfile: ${{ parameters.deploymentProfile }}
      artifactAlias: ${{ parameters.artifactAlias }}
      artifactName: ${{ parameters.artifactName }}
      dependsOn:
        - Deploy
